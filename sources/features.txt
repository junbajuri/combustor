Features
========

* Generates a `CRUD`_ interface based on the specified table.

	* Optionally, it can also generate a CRUD interface with `Bootstrap`_ classes and tags.

	* It can also generate specific code on the following fields:

		* ``gender`` - Generates a ``form_dropdown()`` with an array of "male" and "female" values

		* ``password`` - Generates a new and confirm password fields on ``create.php``, while it also generates current, new, and confirm password fields on ``edit.php``

* Searching data within the table is also integrated. To enable it, just include the following code::

	<?php echo form_open($this->uri->segment(1), array('method' => 'GET', 'class' => '', 'role' => 'Search')); ?>
	    <div class="form-group">
	        <?php echo form_input('keyword', $this->input->get('keyword'), 'class="" placeholder="Search"'); ?>
	    </div>
	<?php echo form_close(); ?>

* Can integrate `Doctrine ORM`_ or **Wildfire**, my implementation of a design pattern that is based from this `article`_.

.. _Bootstrap: http://www.getbootstrap.com
.. _CRUD: http://en.wikipedia.org/wiki/Create,_read,_update_and_delete
.. _Doctrine ORM: http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/
.. _article: http://www.revillweb.com/tutorials/codeigniter-tutorial-learn-codeigniter-in-40-minutes/